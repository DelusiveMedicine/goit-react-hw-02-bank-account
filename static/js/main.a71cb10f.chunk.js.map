{"version":3,"sources":["components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/helpers.js","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App.jsx","index.js"],"names":["module","exports","Controls","state","amount","changeHandler","value","target","valueNumber","Number","setState","clickHandler","props","toastManager","onDeposit","onWithdraw","dataset","add","appearance","autoDismiss","name","this","controls","styles","className","type","onChange","data-name","onClick","Component","withToastManager","Balance","balance","income","expenses","balanceStyle","incomeStyle","expensesStyle","thousandsSeparator","num","numParts","toString","split","replace","join","TransactionHistory","items","history","historyBodyItem","historyHeadItem","map","item","id","date","withFixedPoint","toFixed","key","Dashboard","transactions","prevState","addTransaction","transaction","shortId","Date","toLocaleString","handleSum","sum","reduce","acc","unit","dashboard","fixedPointBalance","length","App","placement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a71cb10f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceStyle\":\"Balance_balanceStyle__1XkLk\",\"incomeStyle\":\"Balance_incomeStyle__3G_qy\",\"expensesStyle\":\"Balance_expensesStyle__s2VGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1lpB_\",\"historyHeadItem\":\"TransactionHistory_historyHeadItem__1qrT6\",\"historyBodyItem\":\"TransactionHistory_historyBodyItem__39MpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__4WQWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1T86G\"};","/* eslint-disable react/state-in-constructor */\nimport React, { Component } from 'react';\nimport { withToastManager } from 'react-toast-notifications';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  state = { amount: '' };\n\n  changeHandler = ({ target }) => {\n    const { value } = target;\n    const valueNumber = Number(value);\n    this.setState({\n      amount: valueNumber,\n    });\n  };\n\n  clickHandler = ({ target }) => {\n    const { toastManager, onDeposit, onWithdraw } = this.props;\n    const { dataset } = target;\n    const { amount } = this.state;\n\n    if (amount <= 0) {\n      return toastManager.add('Введите сумму для проведения операции!', {\n        appearance: 'warning',\n        autoDismiss: true,\n      });\n    }\n\n    if (dataset.name === 'deposit') onDeposit(amount);\n    if (dataset.name === 'withdraw') onWithdraw(amount);\n    return this.setState({ amount: '' });\n  };\n\n  render() {\n    const { amount } = this.state;\n    const { controls } = styles;\n\n    return (\n      <section className={controls}>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={amount}\n          onChange={this.changeHandler}\n        />\n        <button type=\"button\" data-name=\"deposit\" onClick={this.clickHandler}>\n          Deposit\n        </button>\n        <button type=\"button\" data-name=\"withdraw\" onClick={this.clickHandler}>\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nControls.propTypes = {\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n  toastManager: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n};\n\nexport default withToastManager(Controls);\n","import React from 'react';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => {\n  const { balanceStyle, incomeStyle, expensesStyle } = styles;\n  return (\n    <section className={balanceStyle}>\n      <span className={incomeStyle}>{income}$</span>\n      <span className={expensesStyle}>{expenses}$</span>\n      <span>{`Balance: ${balance}$`}</span>\n    </section>\n  );\n};\n\nexport default Balance;\n","const thousandsSeparator = num => {\n  const numParts = num.toString().split('.');\n  numParts[0] = numParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  return numParts.join('.');\n};\n\nexport default thousandsSeparator;\n","import React from 'react';\nimport styles from './TransactionHistory.module.css';\nimport thousandsSeparator from '../helpers';\n\nconst TransactionHistory = ({ items }) => {\n  const { history, historyBodyItem, historyHeadItem } = styles;\n  return (\n    <table className={history}>\n      <thead>\n        <tr>\n          <th className={historyHeadItem}>Transaction</th>\n          <th className={historyHeadItem}>Amount</th>\n          <th className={historyHeadItem}>Date</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => {\n          const { id, type, amount, date } = item;\n          const withFixedPoint = thousandsSeparator(amount.toFixed(2));\n          return (\n            <tr key={id}>\n              <td className={historyBodyItem}>{type}</td>\n              <td className={historyBodyItem}>{withFixedPoint}$</td>\n              <td className={historyBodyItem}>{date}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TransactionHistory;\n","/* eslint-disable react/state-in-constructor */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withToastManager } from 'react-toast-notifications';\nimport shortId from 'shortid';\nimport styles from './Dashboard.module.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport thousandsSeparator from '../helpers';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  onDeposit = amount => {\n    this.setState(prevState => ({\n      balance: prevState.balance + amount,\n    }));\n    this.addTransaction('deposit', amount);\n  };\n\n  onWithdraw = amount => {\n    const { balance } = this.state;\n    const { toastManager } = this.props;\n    if (balance < amount) {\n      return toastManager.add(\n        'На счету недостаточно средств для проведения операции!',\n        {\n          appearance: 'warning',\n          autoDismiss: true,\n        },\n      );\n    }\n    this.setState(prevState => ({\n      balance: prevState.balance - amount,\n    }));\n    return this.addTransaction('withdraw', amount);\n  };\n\n  addTransaction = (type, amount) => {\n    const transaction = {\n      id: shortId(),\n      type,\n      amount,\n      date: new Date().toLocaleString(),\n    };\n\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n    }));\n  };\n\n  handleSum = type => {\n    const { transactions } = this.state;\n    const sum = transactions.reduce(\n      (acc, unit) => acc + (unit.type === type && unit.amount),\n      0,\n    );\n    return thousandsSeparator(sum.toFixed(2));\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    const { dashboard } = styles;\n    const fixedPointBalance = thousandsSeparator(balance.toFixed(2));\n    const income = this.handleSum('deposit');\n    const expenses = this.handleSum('withdraw');\n\n    return (\n      <div className={dashboard}>\n        <Controls\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n          balance={balance}\n        />\n        <Balance\n          balance={fixedPointBalance}\n          income={income}\n          expenses={expenses}\n        />\n        {transactions.length > 0 && <TransactionHistory items={transactions} />}\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  toastManager: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n    .isRequired,\n};\n\nexport default withToastManager(Dashboard);\n","import React from 'react';\nimport { ToastProvider } from 'react-toast-notifications';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => (\n  <ToastProvider placement=\"bottom-right\">\n    <Dashboard />\n  </ToastProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}